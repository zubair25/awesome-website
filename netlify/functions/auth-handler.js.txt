// Yeh server-side code hai, user ke browser mein nahi chalega.

// Abhi testing ke liye, hum users ko ek simple array mein rakhenge.
// Asal website ke liye yahan database (jaise MongoDB, FaunaDB) istemal hota hai.
const users = [];
let tempOTP = {}; // OTPs ko waqti tor par save karne ke liye

exports.handler = async (event) => {
    // Sirf POST request ko handle karein
    if (event.httpMethod !== 'POST') {
        return { statusCode: 405, body: 'Method Not Allowed' };
    }

    try {
        const data = JSON.parse(event.body);
        const { email, password, otp } = data;

        // --- Step 1: LOGIN ya SIGNUP ka Faisla ---
        if (email && password && !otp) {
            const existingUser = users.find(u => u.email === email);

            if (existingUser) {
                // LOGIN ki koshish
                if (existingUser.password === password) {
                    return {
                        statusCode: 200,
                        body: JSON.stringify({ message: 'Login successful!', status: 'LOGGED_IN' }),
                    };
                } else {
                    return {
                        statusCode: 401,
                        body: JSON.stringify({ message: 'Incorrect password.', status: 'ERROR' }),
                    };
                }
            } else {
                // SIGNUP ki koshish -> OTP Bhejein
                const generatedOtp = Math.floor(100000 + Math.random() * 900000).toString();
                tempOTP[email] = { otp: generatedOtp, password: password, timestamp: Date.now() };

                // Yahan SendGrid se email bhejne ka code aayega. Abhi hum sirf response bhej rahe hain.
                // NOTE: Asal mein email bhejne ke liye neeche wala commented code istemal karna hoga.
                
                console.log(`OTP for ${email} is ${generatedOtp}`); // Server par OTP dekhne ke liye

                return {
                    statusCode: 200,
                    body: JSON.stringify({ message: 'OTP sent to your email for verification.', status: 'OTP_SENT' }),
                };
            }
        }
        
        // --- Step 2: OTP VERIFICATION ---
        else if (email && otp) {
            const tempData = tempOTP[email];
            if (tempData && tempData.otp === otp) {
                // OTP sahi hai, naya user banayein
                const newUser = { email: email, password: tempData.password };
                users.push(newUser);
                delete tempOTP[email]; // Temp data delete karein

                return {
                    statusCode: 200,
                    body: JSON.stringify({ message: 'Account created successfully!', status: 'ACCOUNT_CREATED' }),
                };
            } else {
                return {
                    statusCode: 400,
                    body: JSON.stringify({ message: 'Invalid OTP.', status: 'ERROR' }),
                };
            }
        }
        
        // Agar request ghalat hai
        else {
            return {
                statusCode: 400,
                body: JSON.stringify({ message: 'Invalid request.', status: 'ERROR' }),
            };
        }

    } catch (error) {
        return { statusCode: 500, body: JSON.stringify({ message: 'Server error.', error: error.message }) };
    }
};
